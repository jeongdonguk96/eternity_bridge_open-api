plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.12'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
	id("org.jetbrains.kotlin.kapt") version "1.9.25"
}

group = 'com.eternity-bridge'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 디펜던시
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("io.github.oshai:kotlin-logging-jvm:5.1.1")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
	runtimeOnly("com.h2database:h2")

	// Querydsl 의존성 추가
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
    kapt("jakarta.persistence:jakarta.persistence-api")
    kapt("jakarta.annotation:jakarta.annotation-api")
    kapt("com.querydsl:querydsl-apt:5.0.0:jakarta")

	// 테스트
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
	testImplementation("com.h2database:h2")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")

	// Fixture Monkey
	testImplementation("com.navercorp.fixturemonkey:fixture-monkey-kotlin:1.1.11")
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

// QueryDSL QClass 생성 경로를 프로젝트 루트의 src/main/generated로 설정
def querydslGeneratedDir = 'src/main/generated'

// 소스 디렉토리 설정
sourceSets {
    main {
        kotlin.srcDirs += [querydslGeneratedDir]
    }
}

// KAPT 설정
kapt {
    javacOptions {
        option("querydsl.generatedAnnotationClass", "javax.annotation.Generated")
    }
    keepJavacAnnotationProcessors = true
    correctErrorTypes = true
    generateStubs = true
}

// QClass 생성 위치 설정
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslGeneratedDir)
}

// Querydsl QClass 생성 디렉토리를 clean 태스크 실행 시 자동으로 제거
clean {
    delete file(querydslGeneratedDir)
}

tasks.named('test') {
    useJUnitPlatform()
}